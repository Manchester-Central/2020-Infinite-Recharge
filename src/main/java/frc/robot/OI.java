// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import frc.robot.subsystems.*;
import com.chaos131.LogitechF310;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {

    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

    public LogitechF310 driver;
    public LogitechF310 opperator;
    

    public OI() {
        driver = new LogitechF310(0);
        opperator = new LogitechF310(1);

        driver.yButton.whenPressed(new DriveDistancePID(12));
        driver.bButton.whenPressed(new TurnAnglePID(90));
        driver.aButton.whenPressed(new DriveDistancePID(-12));
        driver.xButton.whenPressed(new TurnAnglePID(-90));
        driver.startButton.whileHeld(new DriveSquare(12));
        driver.selectButton.whileHeld(new AimClimbtake());
        driver.leftBumper.whenPressed(new TurnToTarget());
        driver.leftTrigger.whenPressed(new SetPipeline());
        opperator.leftBumper.whileHeld(new NavXTurnRobot());
        opperator.xButton.whenPressed(new ResetNavX());

        driver.rightBumper.whileHeld(new SerializerFeed());


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
    }

    public Joystick getDriver() {
        return driver;
    }
}
